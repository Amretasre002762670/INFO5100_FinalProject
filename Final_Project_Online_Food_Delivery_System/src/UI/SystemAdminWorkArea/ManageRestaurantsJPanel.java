/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminWorkArea;

import Model.System.Ecosystem;
import Model.Employee.Employee;
import Model.Restaurant.Restaurant;
import Model.Restaurant.RestaurantDirectory;
import Model.RestaurantAdmin.RestaurantAdmin;
import Model.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author puppalanagavaishnavi
 */
public class ManageRestaurantsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Ecosystem ecosystem;
    private Restaurant restaurant;
    RestaurantDirectory resList;

    public ManageRestaurantsJPanel(JPanel userProcessContainer, UserAccount account, Ecosystem ecosystem, RestaurantDirectory resList) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        this.resList = resList;
        populateTable();
//        populateComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        restJTable = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        btnUpdateManager = new javax.swing.JButton();
        lblRestPassword = new javax.swing.JLabel();
        txtRestPassword = new javax.swing.JPasswordField();
        txtRestUsername = new javax.swing.JTextField();
        lblRestUsername = new javax.swing.JLabel();
        txtRestAdd = new javax.swing.JTextField();
        txtRestPhonNum = new javax.swing.JTextField();
        txtType = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblRestID = new javax.swing.JLabel();
        lblRestPhoneNum = new javax.swing.JLabel();
        lblRestAdd = new javax.swing.JLabel();
        lblRestName = new javax.swing.JLabel();
        txtRestName = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblPincode = new javax.swing.JLabel();
        txtResPincode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setMaximumSize(new java.awt.Dimension(650, 650));
        setMinimumSize(new java.awt.Dimension(650, 650));
        setPreferredSize(new java.awt.Dimension(650, 650));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        restJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant ID", "Restaurant Name", "Phone Number", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restJTable);

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setText("Create");
        btnCreate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 255, 204));
        btnDelete.setText("Delete");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(204, 255, 204));
        saveBtn.setText("Save");
        saveBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        btnUpdateManager.setBackground(new java.awt.Color(204, 255, 204));
        btnUpdateManager.setText("Update");
        btnUpdateManager.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateManagerActionPerformed(evt);
            }
        });

        lblRestPassword.setText("Password:");

        lblRestUsername.setText("Username:");

        txtRestPhonNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRestPhonNumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRestPhonNumKeyReleased(evt);
            }
        });

        jLabel6.setText("City:");

        lblRestID.setText("Type:");

        lblRestPhoneNum.setText("Phone Number:");

        lblRestAdd.setText("Address:");

        lblRestName.setText("Restaurant Name:");

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Restaurants");

        lblPincode.setText("Pincode");

        txtResPincode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtResPincodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtResPincodeKeyReleased(evt);
            }
        });

        jLabel2.setText(" ");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("<< Back");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblRestPassword)
                                        .addComponent(lblRestUsername))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(lblRestID)
                                            .addComponent(lblPincode))))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRestPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRestUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtResPincode, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRestPhoneNum)
                                    .addComponent(lblRestAdd)
                                    .addComponent(lblRestName))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtRestPhonNum, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRestAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRestName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateManager)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3)
                        .addGap(45, 45, 45)
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, lblPincode, lblRestAdd, lblRestID, lblRestName, lblRestPassword, lblRestPhoneNum, lblRestUsername});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefresh)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestName)
                    .addComponent(txtRestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestPhoneNum)
                    .addComponent(txtRestPhonNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestAdd)
                    .addComponent(txtRestAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestUsername)
                    .addComponent(txtRestUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestPassword)
                    .addComponent(txtRestPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPincode)
                    .addComponent(txtResPincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestID)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdateManager)
                    .addComponent(btnDelete)
                    .addComponent(saveBtn))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:

        if (txtRestUsername.getText().length() <= 0 || String.valueOf(txtRestPassword.getPassword()).length() <= 0
                || txtRestName.getText().length() <= 0 || txtRestAdd.getText().length() <= 0 || txtCity.getText().length() <= 0
                || txtResPincode.getText().length() <= 0 || txtRestPhonNum.getText().length() <= 0
                || txtType.getText().length() <= 0) {
            JOptionPane.showMessageDialog(null, " One or more fields are empty.");
        }
        
        String username = txtRestUsername.getText();
        String password = String.valueOf(txtRestPassword.getPassword());

//        int restID = Integer.parseInt(txtType.getText());
        String restName = txtRestName.getText();
        String streetaddress = txtRestAdd.getText();
        String City = txtCity.getText();
        int Pincode = Integer.parseInt(txtResPincode.getText());
        int phoneNumber = Integer.parseInt(txtRestPhonNum.getText());
        String RestType = txtType.getText();
        //  String restMan = txtRestManager.getText();
        
        // Employee employee = ecosystem.getEmployeeList().createEmployee(restMan);
        UserAccount account = new UserAccount();
        account.setUsername(username);
        account.setPassword(password);
        account.setRole("Restaurant Admin");
        
        RestaurantAdmin resAdmin = new RestaurantAdmin();
        resAdmin.setAccountDetails(account);
        resAdmin.setResName(restName);
        
        Restaurant r = resList.createRestaurant();
        r.setRestaurantName(restName);
        r.setRes_street_add(streetaddress);
        r.setRes_pincode(Pincode);
        r.setRes_city(City);
        r.setPhoneNumber(phoneNumber);
        r.setRes_type(RestType);
        r.setRestaurantAdmin(resAdmin);
        
        
        txtRestName.setText("");
        txtRestPhonNum.setText("");
        txtRestAdd.setText("");
        txtCity.setText("");
        txtResPincode.setText("");
        txtType.setText("");
        txtRestUsername.setText("");
        txtRestPassword.setText("");

        populateTable();
        JOptionPane.showMessageDialog(null, "Restaurant Created");
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = restJTable.getSelectedRow();
        if (selectedRow > 0) {
            Restaurant r = (Restaurant) restJTable.getValueAt(selectedRow, 0);
            ecosystem.getRestaurantDirectory().removeRestaurant(r);
            JOptionPane.showMessageDialog(null, "Restaurant removed Successfully.");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        for (Restaurant r : resList.getRestaurantList()) {

            if (restaurant.getRestaurantName().equals(r.getRestaurantName())) {
//                r.setRestaurantId(Integer.parseInt(txtRestID.getText()));
                r.setRestaurantName(txtRestName.getText());
//                r.setRestaurantManager(txtRestManager.getText());
                r.setPhoneNumber(Integer.parseInt(txtRestPhonNum.getText()));
                r.setRes_street_add(txtRestAdd.getText());
                r.setRes_city(txtCity.getText());
                r.setRes_pincode(Integer.parseInt(txtResPincode.getText()));
                r.setRes_type(txtType.getText());

            }
        }
        JOptionPane.showMessageDialog(null, "Restaurant Updated Successfully.");
        populateTable();
//        txtRestID.setText("");
        txtRestName.setText("");
        txtRestPhonNum.setText("");
        txtRestAdd.setText("");
        txtCity.setText("");
        txtResPincode.setText("");
        txtType.setText("");
        txtRestUsername.setText("");
        txtRestPassword.setText("");
    }//GEN-LAST:event_saveBtnActionPerformed

    private void btnUpdateManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateManagerActionPerformed
        // TODO add your handling code here:

        int selectedRow = restJTable.getSelectedRow();

        if (selectedRow >= 0) {
            Restaurant r = (Restaurant) restJTable.getValueAt(selectedRow, 0);
            restaurant = r;
//            txtRestID.setText(Integer.toString(r.getRestaurantId()));
            txtRestName.setText(r.getRestaurantName());
//            txtRestManager.setText(r.getRestaurantManager());
            txtRestPhonNum.setText(Integer.toString(r.getPhoneNumber()));
            txtRestAdd.setText(r.getRes_street_add());
            txtResPincode.setText(Integer.toString(r.getRes_pincode()));
            txtCity.setText(r.getRes_city());
            txtType.setText(r.getRes_type());
            txtRestUsername.setText(r.getRestaurantAdmin().getAccountDetails().getUsername());
            txtRestPassword.setText(r.getRestaurantAdmin().getAccountDetails().getPassword());

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
//        txtRestID.getText();
        txtRestName.getText();
        txtCity.getText();
        txtResPincode.getText();
        txtType.getText();
        txtRestPhonNum.getText();
        txtRestAdd.getText();
        txtRestUsername.getText();
        txtRestPassword.getPassword();

        populateTable();
    }//GEN-LAST:event_btnUpdateManagerActionPerformed

    private void txtRestPhonNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRestPhonNumKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            jLabel1.setText("Please Enter Number only");
//            txtCustPincode.setText("");
        } else {
            jLabel1.setText("");
        }
    }//GEN-LAST:event_txtRestPhonNumKeyPressed

    private void txtRestPhonNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRestPhonNumKeyReleased
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
//            jLabel7.setText("Please Enter Number only");
            txtRestPhonNum.setText("");
        }
    }//GEN-LAST:event_txtRestPhonNumKeyReleased

    private void txtResPincodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResPincodeKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            jLabel2.setText("Please Enter Number only");
//            txtCustPincode.setText("");
        } else {
            jLabel2.setText("");
        }
    }//GEN-LAST:event_txtResPincodeKeyPressed

    private void txtResPincodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResPincodeKeyReleased
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
//            jLabel7.setText("Please Enter Number only");
            txtResPincode.setText("");
        }
    }//GEN-LAST:event_txtResPincodeKeyReleased

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        // TODO add your handling code here:
        jLabel3.setForeground(Color.blue);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        // TODO add your handling code here:
        jLabel3.setForeground(Color.red);
    }//GEN-LAST:event_jLabel3MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPincode;
    private javax.swing.JLabel lblRestAdd;
    private javax.swing.JLabel lblRestID;
    private javax.swing.JLabel lblRestName;
    private javax.swing.JLabel lblRestPassword;
    private javax.swing.JLabel lblRestPhoneNum;
    private javax.swing.JLabel lblRestUsername;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable restJTable;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtResPincode;
    private javax.swing.JTextField txtRestAdd;
    private javax.swing.JTextField txtRestName;
    private javax.swing.JPasswordField txtRestPassword;
    private javax.swing.JTextField txtRestPhonNum;
    private javax.swing.JTextField txtRestUsername;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) restJTable.getModel();

        model.setRowCount(0);

        for (Restaurant restaurant : resList.getRestaurantList()) {
            Object[] row = new Object[4];
            
            row[0] = restaurant;
            row[1] = restaurant.getRestaurantName();
            row[2] = restaurant.getPhoneNumber();
            row[3] = restaurant.getRes_street_add();
            

            model.addRow(row);
        }

    }

//    private void populateComboBox() {
//       restComboBox.removeAllItems();
//       restComboBox.addItem(Role.RoleType.RestaurantAdmin.toString()); 
//    }
}
