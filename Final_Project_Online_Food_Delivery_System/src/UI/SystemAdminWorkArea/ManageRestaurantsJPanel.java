/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdminWorkArea;


import Model.System.Ecosystem;
import Model.Employee.Employee;
import Model.Restaurant.Restaurant;
import Model.Role.RestaurantAdminrole;
import Model.Role.Role;
import Model.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author puppalanagavaishnavi
 */
public class ManageRestaurantsJPanel extends javax.swing.JPanel {
 private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Ecosystem ecosystem;
    private Restaurant restaurant;
   
    public ManageRestaurantsJPanel(JPanel userProcessContainer, UserAccount account, Ecosystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;        
        this.userAccount = account;
        this.ecosystem = ecosystem;
        populateTable();
        populateComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        restJTable = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        btnUpdateManager = new javax.swing.JButton();
        lblRestPassword = new javax.swing.JLabel();
        txtRestPassword = new javax.swing.JPasswordField();
        txtRestUsername = new javax.swing.JTextField();
        lblRestUsername = new javax.swing.JLabel();
        txtRestAdd = new javax.swing.JTextField();
        txtRestPhonNum = new javax.swing.JTextField();
        txtRestManager = new javax.swing.JTextField();
        txtRestID = new javax.swing.JTextField();
        restComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        lblRestID = new javax.swing.JLabel();
        lblRestManager = new javax.swing.JLabel();
        lblRestPhoneNum = new javax.swing.JLabel();
        lblRestAdd = new javax.swing.JLabel();
        lblRestName = new javax.swing.JLabel();
        txtRestName = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        btnBack.setText("<- Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        restJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Restaurant ID", "Restaurant Name", "Phone Number", "Address", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(restJTable);

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        btnUpdateManager.setText("Update");
        btnUpdateManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateManagerActionPerformed(evt);
            }
        });

        lblRestPassword.setText("Password:");

        lblRestUsername.setText("Username:");

        jLabel6.setText("Role:");

        lblRestID.setText("Restaurant ID:");

        lblRestManager.setText("Restaurant Manager:");

        lblRestPhoneNum.setText("Phone Number:");

        lblRestAdd.setText("Address:");

        lblRestName.setText("Restaurant Name:");

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 51));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Restaurants");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRefresh)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblRestPassword)
                                            .addComponent(lblRestUsername))
                                        .addGap(76, 76, 76)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRestUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                            .addComponent(txtRestPassword)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblRestManager)
                                            .addComponent(lblRestID)
                                            .addComponent(jLabel6)
                                            .addComponent(lblRestPhoneNum)
                                            .addComponent(lblRestAdd)
                                            .addComponent(lblRestName))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRestAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRestPhonNum, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(restComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRestID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRestManager, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRestName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(btnCreate)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateManager)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRefresh)
                        .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(restComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestID)
                    .addComponent(txtRestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestName)
                    .addComponent(txtRestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestManager)
                    .addComponent(txtRestManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestPhoneNum)
                    .addComponent(txtRestPhonNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestAdd)
                    .addComponent(txtRestAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestUsername)
                    .addComponent(txtRestUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRestPassword)
                    .addComponent(txtRestPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdateManager)
                    .addComponent(btnDelete)
                    .addComponent(saveBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:

        String username = txtRestUsername.getText();
        String password = String.valueOf(txtRestPassword.getPassword());
        int restID = Integer.parseInt(txtRestID.getText());
        String restName = txtRestName.getText();
        String restMan = txtRestManager.getText();
        int phoneNum = Integer.parseInt(txtRestPhonNum.getText());
        String address = txtRestAdd.getText();

        Employee employee = ecosystem.getEmployeeList().createEmployee(restMan);

        UserAccount account = ecosystem.getUserAccountDir().addUserAccounts(userAccount);

        Restaurant restaurant = ecosystem.getRestaurantDirectory().createRestaurant();

        txtRestID.setText("");
        txtRestManager.setText("");
        txtRestPhonNum.setText("");
        txtRestAdd.setText("");
        txtRestUsername.setText("");
        txtRestPassword.setText("");

        populateTable();
        JOptionPane.showMessageDialog(null, "Restaurant Created");
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = restJTable.getSelectedRow();
        if (selectedRow >= 0) {
            Restaurant r = (Restaurant) restJTable.getValueAt(selectedRow, 0);
            ecosystem.getRestaurantDirectory().deleteRestaurant(r);
            JOptionPane.showMessageDialog(null, "Restaurant removed Successfully.");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:

        for (Restaurant r : ecosystem.getRestaurantDirectory().getRestaurantList()){

            if (restaurant.getRestaurantName().equals(r.getRestaurantName())) {
                r.setRestaurantId(Integer.parseInt(txtRestID.getText()));
                r.setRestaurantName(txtRestName.getText());
//                r.setRestaurantManager(txtRestManager.getText());
                r.setPhoneNumber(Integer.parseInt(txtRestPhonNum.getText()));
//                r.setAddress(txtRestAdd.getText()); // Address cannot be one line, need to be divided
                
            }
        }
        JOptionPane.showMessageDialog(null, "Restaurant Updated Successfully.");
        populateTable();
        txtRestID.setText("");
        txtRestManager.setText("");
        txtRestPhonNum.setText("");
        txtRestAdd.setText("");
        txtRestUsername.setText("");
        txtRestPassword.setText("");
    }//GEN-LAST:event_saveBtnActionPerformed

    private void btnUpdateManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateManagerActionPerformed
        // TODO add your handling code here:

        int selectedRow = restJTable.getSelectedRow();

        if (selectedRow >= 0) {
            Restaurant r = (Restaurant) restJTable.getValueAt(selectedRow, 0);
            restaurant = r;
            txtRestID.setText(Integer.toString(r.getRestaurantId()));
            txtRestName.setText(r.getRestaurantName());
//            txtRestManager.setText(r.getRestaurantManager());
            txtRestPhonNum.setText(Integer.toString(r.getPhoneNumber()));
//            txtRestAdd.setText(r.getAddress());
            txtRestUsername.setText(r.getRestaurantAdmin().getAccountDetails().getUsername());
            txtRestPassword.setText(r.getRestaurantAdmin().getAccountDetails().getPassword());

        }else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        txtRestID.getText();
        txtRestName.getText();
        txtRestManager.getText();
        txtRestPhonNum.getText();
        txtRestAdd.getText();
        txtRestUsername.getText();
        txtRestPassword.getPassword();

        populateTable();
    }//GEN-LAST:event_btnUpdateManagerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdateManager;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRestAdd;
    private javax.swing.JLabel lblRestID;
    private javax.swing.JLabel lblRestManager;
    private javax.swing.JLabel lblRestName;
    private javax.swing.JLabel lblRestPassword;
    private javax.swing.JLabel lblRestPhoneNum;
    private javax.swing.JLabel lblRestUsername;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JComboBox restComboBox;
    private javax.swing.JTable restJTable;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField txtRestAdd;
    private javax.swing.JTextField txtRestID;
    private javax.swing.JTextField txtRestManager;
    private javax.swing.JTextField txtRestName;
    private javax.swing.JPasswordField txtRestPassword;
    private javax.swing.JTextField txtRestPhonNum;
    private javax.swing.JTextField txtRestUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         DefaultTableModel model = (DefaultTableModel) restJTable.getModel();

        model.setRowCount(0);
        
            for (Restaurant restaurant : ecosystem.getRestaurantDirectory().
                    getRestaurantList()) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = restaurant;
                row[1] = restaurant.getRestaurantName();
//                row[2] = restaurant.getRestaurantManager();
                row[2] = restaurant.getPhoneNumber();
//                row[3] = restaurant.getAddress();
                row[4] = restaurant.getRestaurantAdmin().getAccountDetails().getUsername();

                model.addRow(row);
                }  
        
    }

    private void populateComboBox() {
       restComboBox.removeAllItems();
       restComboBox.addItem(Role.RoleType.RestaurantAdmin.toString()); 
    }
}
